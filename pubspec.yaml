name: student_organizer
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.7.2

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # Core & State Management
  flutter_riverpod: ^2.5.1 # Исправленная версия
  riverpod_annotation: ^2.3.5 # Соответствующая версия
  
  # Backend & Database
  supabase_flutter: ^2.7.0 # SDK для Supabase
  supabase_auth_ui: ^0.5.4 # Используем предложенную версию
  
  # UI & Features
  cupertino_icons: ^1.0.8
  flutter_quill: ^10.0.6 # Rich Text Editor
  table_calendar: ^3.1.3 # Откатываем версию для совместимости с intl ^0.19.0
  go_router: ^14.2.0 # Исправленная версия
  intl: ^0.19.0 # Возвращаем версию, совместимую с flutter_quill
  
  # Data Models & Serialization (если используем генерацию)
  freezed_annotation: ^2.4.1 # Исправленная версия
  json_annotation: ^4.9.0 # Добавляем зависимость
  
  # Networking
  http: ^1.2.3 # Для HTTP запросов (Yandex Disk API)
  drag_and_drop_lists: ^0.4.2
  dio: ^5.8.0+1
  flutter_appauth: ^9.0.0
  flutter_secure_storage: ^4.2.1
  path_provider: ^2.1.5
  file_picker: ^10.0.0
  google_generative_ai: ^0.4.6
  drift: ^2.26.0
  sqlite3_flutter_libs: ^0.5.32
  quill_delta: any # Добавляем зависимость для Delta
  grouped_list: ^6.0.0
  # dio: ^5.5.1 # Альтернатива http, если нужен более мощный клиент
  add_2_calendar: ^3.0.1 # <-- Обновляем версию до совместимой
  flutter_quill_extensions: ^10.0.6 # <-- Меняем версию на 10.0.6 для совместимости с flutter_quill
  flutter_dotenv: ^5.1.0 # <-- Добавляем для .env файлов

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0
  build_runner: ^2.4.12 # Для запуска генераторов кода
  freezed: ^2.5.8
  riverpod_generator: ^2.6.4
  json_serializable: ^6.8.0
  
  # Добавляем для тестирования
  mocktail: ^1.0.0
  riverpod_lint: ^2.6.4
  integration_test: # Добавляем для интеграционных тестов
    sdk: flutter
  drift_dev: ^2.26.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
